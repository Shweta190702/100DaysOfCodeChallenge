Q)
Given two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise.
A string is represented by an array if the array elements concatenated in order forms the string.
 
Example 1:
Input: word1 = ["ab", "c"], word2 = ["a", "bc"]
Output: true
Explanation:
word1 represents string "ab" + "c" -> "abc"
word2 represents string "a" + "bc" -> "abc"
The strings are the same, so return true.

Example 2:
Input: word1 = ["a", "cb"], word2 = ["ab", "c"]
Output: false

Example 3:
Input: word1  = ["abc", "d", "defg"], word2 = ["abcddefg"]
Output: true

Constraints:
1 <= word1.length, word2.length <= 103
1 <= word1[i].length, word2[i].length <= 103
1 <= sum(word1[i].length), sum(word2[i].length) <= 103
word1[i] and word2[i] consist of lowercase letters.

Logic: First we appended the value of arrays in a string to a new string and then used the equals method to check if they are equal are not.

ANS)
class Solution {
    public boolean arrayStringsAreEqual(String[] word1, String[] word2) {
        String w="";
        String w1="";
        for(int i=0; i<word1.length; i++)
        {
            w+=word1[i];
        }
        String ans1=w;
        for(int i=0; i<word2.length; i++)
        {
            w1+=word2[i];
        }
        String ans2=w1;
        if(w.equals(w1))
        {
            return true;
        }
        else
            return false;
    }
}

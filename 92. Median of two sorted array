/*
Problem: Median of Two Sorted Arrays
Question: 
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

Example 1:
Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.

Example 2:
Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.

Constraints:
nums1.length == m
nums2.length == n
0 <= m <= 1000
0 <= n <= 1000
1 <= m + n <= 2000
-106 <= nums1[i], nums2[i] <= 10

Code:  */
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
     int a=nums1.length;
     int b=nums2.length;
     int c=a+b;
     int[] nums3=new int[c];
     for(int i=0;i<a;i++)
     {
         nums3[i]=nums1[i];
     }   
     for(int i=0;i<b;i++)
     {
         nums3[a+i]=nums2[i];
     }
     Arrays.sort(nums3);
     if (c % 2 == 0)
        {
            int z = c / 2;
            int e = nums3[z];
            int q = nums3[z-1];
            return (double)(e+q)/2;
        }
        else
        {
            int z = Math.round(c / 2);
            return nums3[z];
        }
    }
}

Q)Implement pow(x, n), which calculates x raised to the power n (i.e., xn).

Test case 1:
Input: x = 2.00000, n = 10
Output: 1024.00000

Test case 2:
Input: x = 2.10000, n = 3
Output: 9.26100

Test case 3:
Input: x = 2.00000, n = -2
Output: 0.25000

Explanation: 2-2 = 1/22 = 1/4 = 0.25

Constraints:
-100.0 < x < 100.0
-231 <= n <= 231-1
n is an integer.
-104 <= xn <= 104

Logic:
Used type-casting and math.pow() function to implement the program.

ANS)

class Solution {
    public double myPow(double x, int n) {
        if (n == 0)
            return 1;
        if (x == 0)
            return 0;
         // For all other cases
        return (double)Math.pow(x, n);
    }
}

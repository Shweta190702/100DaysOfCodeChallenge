\*

Problem Topic: Find All Numbers Disappeared in an Array(ARRAY)
Problem Link: https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/
Problem:
Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.

Example 1:
Input: nums = [4,3,2,7,8,2,3,1]
Output: [5,6]

Example 2:
Input: nums = [1,1]
Output: [2]

Constraints:
n == nums.length
1 <= n <= 105
1 <= nums[i] <= n

Logic: We have used HashSet for mapping the elements and ArrayList to store the resultant list.

CODE:   *\

class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
         HashSet<Integer> map = new HashSet();
         List<Integer> l1 = new ArrayList<Integer>();
         int n=nums.length;
         for(int i=0;i<n;i++)
         {
             map.add(nums[i]);
         }
         for(int i=1;i<=n;i++)
         {
             if(map.contains(i)==false)
             {
                 l1.add(i);
             }
                
         }
         return l1;
    }
}

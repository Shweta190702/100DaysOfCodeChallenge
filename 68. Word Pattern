/*
Problem: Word Pattern
Question:
Given a pattern and a string s, find if s follows the same pattern.
Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

Example 1:
Input: pattern = "abba", s = "dog cat cat dog"
Output: true

Example 2:
Input: pattern = "abba", s = "dog cat cat fish"
Output: false

Example 3:
Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false

Constraints:
1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space.

CODE:
*/

class Solution {
    public boolean wordPattern(String pattern, String str) {
        String[] arr = str.split(" ");
        char[] charArr = pattern.toCharArray();
        if(arr.length != charArr.length) return false;
        Map<String, Character> map = new HashMap<>();
        for(int i = 0; i < arr.length; i++){
            if(!map.containsKey(arr[i]) && !map.containsValue(charArr[i])){
                map.put(arr[i], charArr[i]);
            }else if(!map.containsKey(arr[i]) && map.containsValue(charArr[i])){
                return false;
            }else{
                if(charArr[i] != map.get(arr[i]))
                    return false;
            }
        }
        return true;
    }
}


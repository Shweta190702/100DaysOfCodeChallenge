Q)You are given a sorted unique integer array nums.
A range [a,b] is the set of all integers from a to b (inclusive).
Return the smallest sorted list of ranges that cover all the numbers in the array exactly. That is, each element of nums is covered by exactly one of the ranges, and there is no integer x such that x is in one of the ranges but not in nums.
Each range [a,b] in the list should be output as:
"a->b" if a != b
"a" if a == b

Test case 1:
Input: nums = [0,1,2,4,5,7]
Output: ["0->2","4->5","7"]
Explanation: The ranges are:
[0,2] --> "0->2"
[4,5] --> "4->5"
[7,7] --> "7"

Test case 2:
Input: nums = [0,2,3,4,6,8,9]
Output: ["0","2->4","6","8->9"]
Explanation: The ranges are:
[0,0] --> "0"
[2,4] --> "2->4"
[6,6] --> "6"
[8,9] --> "8->9"

Constraints:
0 <= nums.length <= 20
-231 <= nums[i] <= 231 - 1
All the values of nums are unique.
nums is sorted in ascending order.

Logic:
We have used java stringof() method to convert int into string and add() method of Set in Java is used to add a specific element into a Set collection

ANS)

class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> ranges = new ArrayList<>();
        int startI = 0;
        int endI = 0;
        for(int i=0; i<nums.length; i++) {
            startI = i;
            while(i < nums.length-1 && nums[i+1] == nums[i] + 1) {
                i++;
            }
            endI = i;
            
            if (startI == endI) {
                ranges.add(String.valueOf(nums[startI]));
            } else {
                ranges.add(nums[startI] + "->" + nums[endI]);
            }
        }
        return ranges;
    }
}

\*Topic: SORTING
Problem Topic: Insertion Sort
PROBLEM: You are given an array in an unsorted way. You need to sort it using Insertion Sort Algorithm.

Algorithm
1. Start from the second element of the array and store it in a variable key.
2. Compare the key with the previous element of the array.
3. If the key is smaller than the previous element, then swap them.
4. Continue to compare the key with the previous elements of the array until it is greater than the previous element.
5. Repeat the above steps until the array is sorted.

Time Complexity : O(n)
Space Complexity : O(1)

EXAMPLE:
Input:
Enter the size of array
5
Enter the elements of array
78 45 69 1 25

Output:
1 25 45 69 78

CODE:           *\

import java.util.*;
public class insertion_sort {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the size of array");
        int n = sc.nextInt();
        int[] arr = new int[n];
        System.out.println("Enter the elements of array");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        insertionSort(arr);
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
    }
    public static void insertionSort(int[] arr) {
        for (int i = 1; i < arr.length; i++) {
            int key = arr[i];
            int j = i - 1;
            while (j >= 0 && arr[j] > key) {
                arr[j + 1] = arr[j];
                j--;
            }
            arr[j + 1] = key;
        }
    }    
}
